# This small example illustrates how to use the remote API
# synchronous mode. The synchronous mode needs to be
# pre-enabled on the server side. You would do this by
# starting the server (e.g. in a child script) with:
#
# simRemoteApi.start(19999,1300,false,true)
#
# But in this example we try to connect on port
# 19997 where there should be a continuous remote API
# server service already running and pre-enabled for
# synchronous mode.
#
#
# IMPORTANT: for each successful call to simxStart, there
# should be a corresponding call to simxFinish at the end!

try:
    import vrep
except:
    print ('--------------------------------------------------------------')
    print ('"vrep.py" could not be imported. This means very probably that')
    print ('either "vrep.py" or the remoteApi library could not be found.')
    print ('Make sure both are in the same folder as this file,')
    print ('or appropriately adjust the file "vrep.py"')
    print ('--------------------------------------------------------------')
    print ('')

import time
import sys

FRAMELENGTH = 0.02
simThreadCycleInMs = 20
motNum = [34] #23,24,21,33
U1 = 0
C1 = 1

Soccer_Walk_FF0 = [
        ( 10,  0,1481,-2963,-1481,0,0,3000,0,-300,1000,0,   0,-1481,2963,1481,0,0,-3000,0,300,-1000),
        (  6,  0,1428,-2909,-1345,0,0,3000,0,-300,1500,0,-200,-1481,2963,1481,0,0,-3000,0,300, -500),
        (  1,  0,1652,-3298,-1644,0,0,3000,0,-300,1583,0,-200,-1481,2963,1481,0,0,-3000,0,300, -417),
        (  4,  0, 924,-3099,-2178,0,0,3000,0,-300,1916,0,-200,-1716,2943,1227,0,0,-3000,0,300,  -84),
        (  1,  0,1071,-2880,-1807,0,0,3000,0,-300,2000,0,   0,-1884,2879, 996,0,0,-3000,0,300,    0)]
Soccer_Walk_FF1 = [
        (  6,200,1415,-2957,-1544,0, 0,3000,0,-300,1250,0,   0,-1819,2339, 524,0,U1,-3000,0,300, -750),
        (  1,200,1469,-2963,-1493,0, 0,3000,0,-300,1125,0,   0,-2350,2995, 646,0, 0,-3000,0,300, -875),
        (  4,200,1760,-2951,-1283,0, 0,3000,0,-300, 625,0,   0,-1876,3285,1413,0, 0,-3000,0,300,-1375),
        (  4,200,1845,-2898,-1055,0,U1,3000,0,-300, 125,0,   0,-1123,3186,2062,0, 0,-3000,0,300,-1875),
        (  1,  0,1884,-2879, -996,0,U1,3000,0,-300,   0,0,   0,-1071,2880,1807,0, 0,-3000,0,300,-2000),
        (  6,  0,1819,-2339, -524,0,U1,3000,0,-300, 750,0,-200,-1415,2957,1544,0, 0,-3000,0,300,-1250),
        (  1,  0,2350,-2995, -646,0, 0,3000,0,-300, 875,0,-200,-1469,2963,1493,0, 0,-3000,0,300,-1125),
        (  4,  0,1876,-3285,-1413,0, 0,3000,0,-300,1375,0,-200,-1670,2951,1283,0, 0,-3000,0,300, -625),
        (  4,  0,1123,-3186,-2062,0, 0,3000,0,-300,1875,0,-200,-1845,2898,1055,0,U1,-3000,0,300, -125),
        (  1,  0,1071,-2880,-1807,0, 0,3000,0,-300,2000,0,   0,-1884,2879, 996,0,U1,-3000,0,300,  0)]
Soccer_Walk_FF2 = [
        (  6,200,1415,-2957,-1544,100,0,3000,0,-300,1250,0,   0,-1819,2339, 524,   0,0,-3000,0,300, -750),
        (  1,200,1469,-2963,-1493,100,0,3000,0,-300,1125,0,   0,-2350,2995, 646,   0,0,-3000,0,300, -875),
        (  4,200,1760,-2951,-1283,100,0,3000,0,-300,1000,0,   0,-1876,3285,1413,   0,0,-3000,0,300,-1000),
        (  1,  0,1481,-2963,-1481,100,0,3000,0,-300,1000,0,   0,-1481,2963,1481,   0,0,-3000,0,300,-1000),
        ( 10,  0, 600,-1000, -500,  0,0,2000,0,-200, 800,0,   0, -600,1000, 500,   0,0,-2000,0,200, -800)]
#Soccer_Walk_FF = [
#        ( 10,100,1481,-2963,-1481,100,0,3000,0,-300,1000,0,-100,-1481,2963,1481,-100,0,-3000,0,300,-1000),
#        (  6,100,1428,-2909,-1345,100,0,3000,0,-300,1500,0,-300,-1481,2963,1481,-100,0,-3000,0,300, -500),
#        (  1,100,1652,-3298,-1644,100,0,3000,0,-300,1583,0,-300,-1481,2963,1481,-100,0,-3000,0,300, -417),
#        (  4,100, 924,-3099,-2178,100,0,3000,0,-300,1916,0,-300,-1716,2943,1227,-100,0,-3000,0,300,  -84),
#        (  1,100,1071,-2880,-1807,100,0,3000,0,-300,2000,0,-100,-1884,2879, 996,-100,0,-3000,0,300,    0),
#        (  6,300,1415,-2957,-1544,100,0,3000,0,-300,1250,0,-100,-1819,2339, 524,-100,U1,-3000,0,300, -750),
#        (  1,300,1469,-2963,-1493,100,0,3000,0,-300,1125,0,-100,-2350,2995, 646,-100,0,-3000,0,300,  -875),
#        (  4,300,1760,-2951,-1283,100,0,3000,0,-300, 625,0,-100,-1876,3285,1413,-100,0,-3000,0,300,-1375),
#        (  4,300,1845,-2898,-1055,100,U1,3000,0,-300, 125,0,-100,-1123,3186,2062,-100,0,-3000,0,300,-1875),
#        (  1,100,1884,-2879, -996,100,U1,3000,0,-300,   0,0,-100,-1071,2880,1807,-100,0,-3000,0,300,-2000),
#        (  6,100,1819,-2339, -524,100,U1,3000,0,-300, 750,0,-300,-1415,2957,1544,-100,0,-3000,0,300,-1250),
#        (  1,100,2350,-2995, -646,100,0,3000,0,-300, 875,0,-300,-1469,2963,1493,-100,0,-3000,0,300,-1125),
#        (  4,100,1876,-3285,-1413,100,0,3000,0,-300,1375,0,-300,-1670,2951,1283,-100,0,-3000,0,300, -625),
#        (  4,100,1123,-3186,-2062,100,0,3000,0,-300,1875,0,-300,-1845,2898,1055,-100,U1,-3000,0,300, -125),
#        (  1,100,1071,-2880,-1807,100,0,3000,0,-300,2000,0,-100,-1884,2879, 996,-100,U1,-3000,0,300,  0),
#        (  6,300,1415,-2957,-1544,100,0,3000,0,-300,1250,0,-100,-1819,2339, 524,-100,0,-3000,0,300, -750),
#        (  1,300,1469,-2963,-1493,100,0,3000,0,-300,1125,0,-100,-2350,2995, 646,-100,0,-3000,0,300, -875),
#        (  4,300,1760,-2951,-1283,100,0,3000,0,-300,1000,0,-100,-1876,3285,1413,-100,0,-3000,0,300,-1000),
#        (  1,100,1481,-2963,-1481,100,0,3000,0,-300,1000,0,-100,-1481,2963,1481,-100,0,-3000,0,300,-1000),
#        ( 10,  0, 600,-1000, -500,  0,0,2000,0,-200, 800,0,   0, -600,1000, 500,   0,0,-2000,0,200, -800)]

Soccer_Walk_FF = [
        ( 10,  0,1481,-2963,-1481,0, 0,3000,0,-300,1000,0,   0,-1481,2963,1481,0,0,-3000,0,300,-1000),
        (  6,  0,1428,-2909,-1345,0, 0,3000,0,-300,1500,0,-200,-1481,2963,1481,0,0,-3000,0,300, -500),
        (  1,  0,1652,-3298,-1644,0, 0,3000,0,-300,1583,0,-200,-1481,2963,1481,0,0,-3000,0,300, -417),
        (  4,  0, 924,-3099,-2178,0, 0,3000,0,-300,1916,0,-200,-1716,2943,1227,0,0,-3000,0,300,  -84),
        (  1,  0,1071,-2880,-1807,0, 0,3000,0,-300,2000,0,   0,-1884,2879, 996,0,0,-3000,0,300,    0),
        (  6,200,1415,-2957,-1544,0, 0,3000,0,-300,1250,0,   0,-1819,2339, 524,0,U1,-3000,0,300, -750),
        (  1,200,1469,-2963,-1493,0, 0,3000,0,-300,1125,0,   0,-2350,2995, 646,0,0,-3000,0,300,  -875),
        (  4,200,1760,-2951,-1283,0, 0,3000,0,-300, 625,0,   0,-1876,3285,1413,0,0,-3000,0,300,-1375),
        (  4,200,1845,-2898,-1055,0,U1,3000,0,-300, 125,0,   0,-1123,3186,2062,0,0,-3000,0,300,-1875),
        (  1,  0,1884,-2879, -996,0,U1,3000,0,-300,   0,0,   0,-1071,2880,1807,0,0,-3000,0,300,-2000),
        (  6,  0,1819,-2339, -524,0,U1,3000,0,-300, 750,0,-200,-1415,2957,1544,0,0,-3000,0,300,-1250),
        (  1,  0,2350,-2995, -646,0, 0,3000,0,-300, 875,0,-200,-1469,2963,1493,0,0,-3000,0,300,-1125),
        (  4,  0,1876,-3285,-1413,0, 0,3000,0,-300,1375,0,-200,-1670,2951,1283,0,0,-3000,0,300, -625),
        (  4,  0,1123,-3186,-2062,0, 0,3000,0,-300,1875,0,-200,-1845,2898,1055,0,U1,-3000,0,300, -125),
        (  1,  0,1071,-2880,-1807,0, 0,3000,0,-300,2000,0,   0,-1884,2879, 996,0,U1,-3000,0,300,  0),
        (  6,200,1415,-2957,-1544,0, 0,3000,0,-300,1250,0,   0,-1819,2339, 524,0,0,-3000,0,300, -750),
        (  1,200,1469,-2963,-1493,0, 0,3000,0,-300,1125,0,   0,-2350,2995, 646,0,0,-3000,0,300, -875),
        (  4,200,1760,-2951,-1283,0, 0,3000,0,-300,1000,0,   0,-1876,3285,1413,0,0,-3000,0,300,-1000),
        (  1,  0,1481,-2963,-1481,0, 0,3000,0,-300,1000,0,   0,-1481,2963,1481,0,0,-3000,0,300,-1000),
        ( 10,  0, 600,-1000, -500,0, 0,2000,0,-200, 800,0,   0, -600,1000, 500,   0,0,-2000,0,200, -800)]


Soccer_Small_Jump_Forward= [
            (10,50,1481,-2963,-1481,100,0,3000,0,-300, 1000,0,-50,-1481,2963,1481,-100,0,-3000,0,300,-1000),
            ( 8,50,1900,-4000,-2400,100,0,3000,0,-300,    0,0,-50,-1900,4000,2400,-100,0,-3000,0,300,    0),
            ( 4,50,2000,-2500,-1000,100,0,3000,0,-300,-1500,0,-50,-2000,2500,1000,-100,0,-3000,0,300, 1500),
            ( 1,50,2000,-4000,-1932,100,0,3000,0,-300, 1000,0,-50,-2000,4000,1932,-100,0,-3000,0,300,-1000),
            ( 3,50,2000,-4000,-2100,100,0,3000,0,-300, 1000,0,-50,-2000,4000,2100,-100,0,-3000,0,300,-1000),
            (10,50,1481,-2963,-1481,100,0,3000,0,-300, 1000,0,-50,-1481,2963,1481,-100,0,-3000,0,300,-1000),
            (10,50, 500,-1000, -500,  0,0,2000,0,-300,  800,0,-50, -500,1000, 500,   0,0,-2000,0,300, -800)]
Soccer_Get_UP_Stomach_N = [
        (20, 0, 600,-1000, 2964,0,0,2904,0,-900,-1500,0,0,-600,1000,-2893,0,0,-2900,0,900,1500),
        (20, 0, 600,-1000, 2964,0,0,2904,0,-900,-1500,0,0,-600,1000,-2893,0,0,-2900,0,900,1500),
        (20, 0,-400,  339,-3478,0,0,3500,0,   0,-1500,0,0, 400,-412, 3519,0,0,-3500,0,  0,1500),
        (20, 0,-841, -412,-3459,0,0,-121,0,   0,-2831,0,0, 833, 332, 3440,0,0,  121,0,  0,2831),
        (40,0,-1700, -412,-3459,0,0,-121,0,   0,-2831,0,0,1700, 412, 3440,0,0,  121,0,  0,2831),
        (60,0,  600,-1000, -500,0,0,2000,0,-200,  800,0,0,-600,1000,  500,0,0,-2000,0,200,-800)]

Soccer_Get_UP_Stomach  = [
        (15, 0, 600,-1000, -500,0,0,3800,0,-1000, 2000,0,0,-600,1000, 500,0,0,-3800,0,1000,-2000),
        (50, 0, 600,-1000, -800,0,0,3800,0,-1000,-1500,0,0,-600,1000, 800,0,0,-3800,0,1000, 1500),
        (20, 0, 600,-1000, -800,0,0,3500,0,    0,-1500,0,0,-600,1000, 800,0,0,-3500,0,   0, 1500),
        (40, 0,1200,    0,-1200,0,0,   0,0,    0,-2700,0,0,-1200,  0,1200,0,0,    0,0,   0, 2700),
        (25, 0,-300,    0,-3300,0,0,   0,0, -200,-2700,0,0,  300,  0,3300,0,0,    0,0,-200, 2700),
        ( 5, 0,-300,    0,-3300,0,0,   0,0, -200,-2700,0,0,  300,  0,3300,0,0,    0,0,-200, 2700),
        (20, 0,-1500,   0,-3450,0,0,   0,0, -200,-2700,0,0, 1500,  0,3450,0,0,    0,0,-200, 2700),
        (35, 0,-1200,   0,-2100,0,0,   0,0, -200,-1100,0,0, 1200,  0,2150,0,0,    0,0,-200, 1100),
        (50, 0, 600,-1000, -500,0,0,2000,0, -200,  800,0,0, -600,1000,500,0,0,-2000,0,-200, -800)]

Soccer_Get_UP_Face_Up = [
        (20, 0,    0,    0,    0,0,0, 3500,    0,-1500, 2500,0,0,    0,    0,    0,0,0,-3500,   0,1500,-2500),
        (14, 0,    0,    0,    0,0,0, 3500,    0, -200, 2500,0,0,    0,    0,    0,0,0,-3500,   0, 200,-2500),
        (35, 0,    0,    0,-2000,0,0, 3300,-2000, -200, 3600,0,0,    0,    0, 2000,0,0,-3300,2000, 200,-3600),
        (30, 0,-3500, 1200,-2800,0,0,  500,    0, -200, 1500,0,0, 3500,-1200, 2800,0,0, -500,   0, 200,-1500),
        (28, 0,-3500, 1200,-3500,0,0,  500,    0, -200,  200,0,0, 3500,-1200, 3500,0,0, -500,   0, 200, -200),
        (28, 0,-2400, 1200,-3500,0,0,  500,    0, -200, -800,0,0, 2400,-1200, 3500,0,0, -500,   0, 200,  800),
        ( 5, 0,-2400, 1200,-3500,0,0,  500,    0, -200, -800,0,0, 2400,-1200, 3500,0,0, -500,   0, 200,  800),
        (15, 0,-2400, 1200,-3500,0,0, 3500,    0,-1000,  800,0,0, 2400,-1200, 3500,0,0,-3500,   0,1000, -800),
        (20, 0,-2400,  437,-3500,0,0, 3500,    0,-1000,  800,0,0, 2400, -437, 3500,0,0,-3500,   0,1000, -800),
        (80, 0,  600,-1000, -500,0,0, 2000,    0, -200,  800,0,0, -600, 1000,  500,0,0,-2000,   0, 200, -800)]

PanaltyDefenceReady  = [
        (50, 0,   0,    0,    0,0,0,   0,0,    0,-2000,0,0,   0,   0,   0,0,0,    0,0,   0, 2000),
        (100,-1000,1900,-4000,-2400,-1000,0,156,-90,670,-1119,0,1000,-1900,4000,2400,1000,0,-156,90,-670,1119)]
PenaltyDefenceF  = [
        ( 5,-2800,   0,    0,    0,-2700,0,221,4, 89,-1544,0,2800,   0,   0,   0,2700,0,-221,-4, -89, 1544),
        (10,-2800,   0,    0,    0,-2700,0,221,4, 89,-1544,0,2800,   0,   0,   0,2700,0,-221,-4, -89, 1544),
        ( 5,-2800,   0,    0,    0,-2700,0,221,4, -3000,-1544,0,2800,   0,   0,   0,2700,0,-221,-4,3000, 1544)]

Get_Up_From_Defence  = [
        (20,0, 0,   0,    0,-2700,0,221,  4,80,-4426,0,0,   0,   0,   0,2700,0,    221,4,   80, 4426)]

mot = [0,0,0,0,0,0,
       Soccer_Get_UP_Stomach_N,0,Soccer_Walk_FF,0,0,
       0,0,0,Soccer_Small_Jump_Forward,0,
       0,0,0,0,0,
       Get_Up_From_Defence,0,PanaltyDefenceReady, PenaltyDefenceF,0,
       0,0,0,0,Soccer_Walk_FF0,
       Soccer_Walk_FF1, Soccer_Walk_FF2, Soccer_Get_UP_Stomach, Soccer_Get_UP_Face_Up]

activeServos = [(10,2),(9,2),(8,2),(7,2),(6,2),(5,2),(4,2),
                (3,2),(2,2),(1,2),(0,2),(10,1),(9,1),(8,1),
                (7,1),(6,1),(5,1),(4,1),(3,1),(2,1),(1,1)]
activeJoints = ['Leg_right_10','Leg_right_9','Leg_right_8','Leg_right_7','Leg_right_6','Leg_right_5','hand_right_4',
                'hand_right_3','hand_right_2','hand_right_1','Tors_0','Leg_left_10','Leg_left_9','Leg_left_8',
                'Leg_left_7','Leg_left_6','Leg_left_5','hand_left_4','hand_left_3','hand_left_2','hand_left_1']
#activeJoints = ['foot_right','leg_right','knee_right_2','knee_right','Thigh_Right_2','Thigh_right','Right_hand_4',
#                'Right_hand_3','right_hand_2','Right_hand','Tors_1','foot_left','leg_left','knee_left_2',
#                'knee_left','Thigh_left_2','Thigh_left','Left_hand_4','Left_hand_3','Left_hand_2','Left_Hand']
#factor = [-1,-1,-1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,1,1]
factor = [1,-1,-1,1,-1,1,1,1,1,-1,1,1,-1,-1,1,-1,1,1,1,1,-1]

def simulateMotion(clientID, vrep, trims, mot, activeJoints, factor, FRAMELENGTH, simThreadCycleInMs, activePose):
    # start the simulation
    vrep.simxStartSimulation(clientID,vrep.simx_opmode_blocking)
    i=0    
    for i in range(len(mot)):
        activePoseOld = activePose
        activePose =[]
        for j in range(len(activeJoints)):
                activePose.append(0.017*mot[i][j+1]*0.03375*factor[j] +trims[j])
        pulseNum = int(mot[i][0]*FRAMELENGTH * 1000 / simThreadCycleInMs)
        for k in range (pulseNum):
            for j in range(len(activeJoints)):
                tempActivePose = activePoseOld[j]+(activePose[j]-activePoseOld[j])*k/pulseNum
                returnCode = vrep.simxSetJointTargetPosition(clientID, jointHandle[j] , tempActivePose, vrep.simx_opmode_streaming)
            vrep.simxSynchronousTrigger(clientID)
    return activePose

print ('Program started')
vrep.simxFinish(-1) # just in case, close all opened connections
clientID=vrep.simxStart('127.0.0.1',19997,True,True,5000,simThreadCycleInMs) # Connect to V-REP
if clientID!=-1:
    print ('Connected to remote API server')
    # Collect Joint Handles and trims from model
    jointHandle =[]
    trims = []
    for i in range(len(activeJoints)):
        returnCode, a= vrep.simxGetObjectHandle(clientID, activeJoints[i], vrep.simx_opmode_blocking)
        jointHandle.append(a)
        returnCode, position= vrep.simxGetJointPosition(clientID, a, vrep.simx_opmode_blocking)
        trims.append(position)

    #print(trims)

    if sys.version_info[0] == 3:
        input('Press <enter> key to step the simulation!')
    else:
        raw_input('Press <enter> key to step the simulation!')
    # enable the synchronous mode on the client:
    vrep.simxSynchronous(clientID,True)

    while (True):
        #Прыжок
        for i in range(len(motNum)):
            activePose = simulateMotion(clientID, vrep, trims, mot[motNum[i]], activeJoints, factor, FRAMELENGTH, simThreadCycleInMs, trims )
        #activePose = simulateMotion(clientID, vrep, trims, mot[30], activeJoints, factor, FRAMELENGTH, simThreadCycleInMs, trims  )
        #for i in range(C1): 
        #    activePose = simulateMotion(clientID, vrep, trims, mot[31], activeJoints, factor, FRAMELENGTH, simThreadCycleInMs,activePose  )
        #simulateMotion(clientID, vrep, trims, mot[32], activeJoints, factor, FRAMELENGTH, simThreadCycleInMs, activePose  )
        time.sleep(5)
        # return to initial pose
        for j in range(len(activeJoints)):
            returnCode = vrep.simxSetJointTargetPosition(clientID, jointHandle[j] , trims[j], vrep.simx_opmode_streaming)
        # stop the simulation:
        vrep.simxStopSimulation(clientID,vrep.simx_opmode_blocking)
        a = input('Press "e" for end or <enter> to continue ')
        if a=='e': break
    # Now step a few times:
    

    #clock = time.perf_counter()
    #for i in range(1,20):
        #if sys.version_info[0] == 3:
            #input('Press <enter> key to step the simulation!')
        #else:
        #    #raw_input('Press <enter> key to step the simulation!')
        #while ((time.perf_counter() - clock) < i*0.05): 
        #    time.sleep(0.001) 
        #vrep.simxSynchronousTrigger(clientID)
        



    # Now close the connection to V-REP:
    vrep.simxFinish(clientID)
else:
    print ('Failed connecting to remote API server')
print ('Program ended')
